#############
# задание 1 #
#############

# перепешите последний пример
# так, чтобы в нём появилась
# обработка правила "2",
# рисующая контурный круг

# импортируем все необходимое
from drawbot_skia.drawbot import rect, oval, newPage, saveImage, fill, stroke, strokeWidth, newDrawing

# зададим правила для выбора
# фигуры, которые будем позже
# использовать:
rules = [1, 0, 1, 0, 2, 0, 1, "гусь"] * 20
# обратите внимание, умножение спис-
# ка на число 20 создаёт новый
# список, повторённый 20 раз

# создадим новую страницу с
# помощью переменных высоты
# и ширины
w, h = 742.5, 1050
newPage(w, h)

# определим поля и начальные
# координаты
margin = 80
x = margin
y = h - margin

# шаг—это ширина страницы минус
# два поля (правое и левое),
# делённое на 6 (потому что я
# хочу 6 фигур в строке, можете
# поменять)
step = (w - margin * 2) / 6

# для ясности и удобства
# создадим переменную size,
# равную выбранному шагу
size = step

# в цикле переберём «правила»
# по одному. 1 будет квадратом,
# 0 будет кругом, остальные —
# пропуск и принт в консоль:
for rule in rules:
    # круг, если правило == 0
    if rule == 0:
        fill(0, 0, 0)
        oval(x, y - step, size, size)
    # квадрат, если правило == 1
    elif rule == 1:
        fill(0, 0, 0)
        rect(x, y - step, size, size)
    # обработка правила "2",
    # рисующая контурный круг
    elif rule == 2:
        fill(None)
        stroke(0, 0, 0)
        strokeWidth(3)
        oval(x, y - step, size, size)
    # всё другое print в консоль
    else:
        print(rule, "<— неизвестное правило")

    # сдвинем x на шаг
    x += step

    # если строка кончилась,
    # вернём x в начало, а
    # y сдвинем вниз на шаг
    if x >= w - margin:
        x = margin
        y -= step

    # если y дошёл до низа
    # страницы, создадим новую и
    # обнулим координаты
    if y - step < margin:
        newPage(w, h)
        x = margin
        y = h - margin

# выйдем из цикла (начнём писать
# без отступа) и сохраним pdf
saveImage("Задание 2.1.pdf")

##########################
# задание 2              #
# творческое, свободное  #
##########################
newDrawing()

rules = [1, 0, 1, 0, 2, 0, "гусь"] * 5


# создадим новую страницу с
# помощью переменных высоты
# и ширины
w, h = 1000, 1000
newPage(w, h)

# определим поля и начальные
# координаты
margin = 80
x = margin
y = h - margin

# шаг—это ширина страницы минус
# два поля (правое и левое),
# делённое на 6 (потому что я
# хочу 6 фигур в строке, можете
# поменять)
step = (w - margin * 2) / 6

# для ясности и удобства
# создадим переменную size,
# равную выбранному шагу
size = step

# в цикле переберём «правила»
# по одному. 1 будет квадратом,
# 0 будет кругом, остальные —
# пропуск и принт в консоль:
for rule in rules:
    # круг, если правило == 0
    if rule == 0:
        fill(0, 0, 0)
        oval(x, y - step, size, size)
    # квадрат, если правило == 1
    elif rule == 1:
        fill(0, 0, 0)
        rect(x, y - step, size, size)
    # обработка правила "2",
    # рисующая контурный круг
    elif rule == 2:
        fill(None)
        stroke(0, 0, 0)
        strokeWidth(3)
        oval(x, y - step, size, size)
    # всё другое print в консоль
    else:
        print(rule, "<— неизвестное правило")

    # сдвинем x на шаг
    x += step

    # если строка кончилась,
    # вернём x в начало, а
    # y сдвинем вниз на шаг
    if x >= w - margin:
        x = margin
        y -= step

fill(0, 0, 0)
rect(x, y - step, size, size)
# от сглаза

fill(0, 0, 1)
oval(250, 250, 500, 500)
fill(1, 1, 1)
oval(375, 375, 250, 250)
fill(0, 1, 1)
corr = 10
r = 250/4
oval(375 + r - corr/2, 375 + r - corr/2, 2*r + corr, 2*r + corr)
fill(0, 0, 0)
corr = 0
r = 135/4
oval(433 + r - corr/2, 433 + r - corr/2, 2*r + corr, 2*r + corr)


saveImage("Задание 2.2.pdf")